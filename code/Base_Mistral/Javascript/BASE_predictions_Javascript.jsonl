{"value":"678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989910102103104105106107108109110111112113114115116117118119120121122"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u043d\u0430 JavaScript, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435.  \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e 1 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 [ L , R ] \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \\n  \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0435\u0441\u043b\u0438 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442 ; \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439 ; P \/ 2 -> findSize ( N \/ 2 )  P % 2 -> 1  P \/ 2 -> findSize ( N \/ 2 ) ; \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 1 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 [ L , R ] ; \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439 ; \u0427\u0430\u0441\u0442\u044c 1 -> N \/ 2 [ 1 , Siz_M ] ; \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043e\u043d\u0435\u0447\u043d\u0443\u044e \u0442\u043e\u0447\u043a\u0443 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0434\u043e \u043c\u0438\u043d\u0438\u043c\u0443\u043c\u0430 ( Siz_M , R ) ; \u0427\u0430\u0441\u0442\u044c 2 -> N % 2 [ SizM + 1 , Siz_M + 1 ] ; \u0427\u0430\u0441\u0442\u044c 3 -> N \/ 2 [ SizM + 2 , 2 * Siz_M - "}
{"value":" 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"\u0435\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f N; Driver \u043a\u043e\u0434 [\/INST] \\n [INST] Write a Javascript program to complete the following. Check if the remainder of N | Function to check if a number holds the condition ( N - 1 ) ! % N = N - 1 ; Corner cases ; Number divisible by 2 or 3 are not prime ; Iterate from 5 and keep checking for prime ; Function to check the expression for the value N; Driver code [\/INST] \\n industrially own method for checking the expression for the value N; Driver code [\/INST] \\n [INST] Write a Javascript program to complete the following. Check if the remainder of N | Function to check if a number holds the condition ( N - 1 ) ! % N = N - 1 ; Corner cases ; Number divisible by 2 or 3 are not prime ; Iterate from 5 and keep checking for prime ; Function to check the expression for the value N; Driver code [\/INST] \\n industrially own method for checking the expression for the value N; Driver code [\/INST] \\n"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"ST] Write a Javascript program to complete the following. Sum of division of the possible pairs for the given Array | Function to compute the sum ; Counting frequency of each term and finding maximum among it ; Making cumulative frequency ; Taking the ceil value ; nos . in [ ( n - 0.5 ) X , ( n + 0.5 ) X ) range will add n to the ans ; Return the final result ; Driver Code [\/INST] \\n  Industries ]\n\n[INST] Write a Javascript program to complete the following. Sum of division of the possible pairs for the given Array | Function to compute the sum ; Counting frequency of each term and finding maximum among it ; Making cumulative frequency ; Taking the ceil value ; nos . in [ ( n - 0.5 ) X , ( n + 0.5 ) X ) range will add n to the ans ; Return the final result ; Driver Code [\/INST] \\n Industries ]\n\n[INST] Write a Javascript program to complete the following. Sum of division of the possible pairs for the given Array | Function to compute the sum ; Counting frequency of each term and finding maximum among"}
{"value":"\u0432\u0435\u043d\u044c: [INST] Write a Javascript program to complete the following. Count of elements to be inserted to make Array sum twice the XOR of Array | Function to find the minimum number of elements that need to be inserted such that the sum of the elements of the array is twice the XOR of the array ; Variable to store the Xor of all the elements ; Variable to store the sum of all elements ; Loop to find the Xor and the sum of the array ; If sum = 2 * Xor ; No need to insert more elements ; We insert one more element which is Sum ; We insert two more elements Sum + Xor and Xor . ; Print the number of elements inserted in the array ; Print the elements that are inserted in the array ; Driver code [\/INST] \\n \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u0443\u0440\u043e\u0432\u043d\u044e: [INST] Write a Javascript program to complete the following. Count of elements to be inserted to make Array sum twice the XOR of Array | Function to find the minimum number of elements that need to be inserted such that the sum of the elements of the array is twice the XOR of the array ; Variable to store the Xor of all the"}
{"value":", 1990-\u0435 \u0433\u043e\u0434\u044b, 2000-\u0435 \u0433\u043e\u0434\u044b, 2010-\u0435 \u0433\u043e\u0434\u044b, 2020-\u0435 \u0433\u043e\u0434\u044b, 2021 \u0433\u043e\u0434, 2022 \u0433\u043e\u0434, 2023 \u0433\u043e\u0434, 2024 \u0433\u043e\u0434, 2025 \u0433\u043e\u0434, 2026 \u0433\u043e\u0434, 2027 \u0433\u043e\u0434, 2028 \u0433\u043e\u0434, 2029 \u0433\u043e\u0434, 2030 \u0433\u043e\u0434, 2031 \u0433\u043e\u0434, 2032 \u0433\u043e\u0434, 2033 \u0433\u043e\u0434, 2034 \u0433\u043e\u0434, 2035 \u0433\u043e\u0434, 2036 \u0433\u043e\u0434, 2037 \u0433\u043e\u0434, 2038 \u0433\u043e\u0434, 2039 \u0433\u043e\u0434, 2040 \u0433\u043e\u0434, 2041 \u0433\u043e\u0434, 2042 \u0433\u043e\u0434, 2043 \u0433\u043e\u0434, 2044 \u0433\u043e\u0434, 2045 \u0433\u043e\u0434, 2046 \u0433\u043e\u0434, 2047 \u0433\u043e\u0434, 2048 \u0433\u043e\u0434, 2049 \u0433\u043e\u0434, 2050 \u0433\u043e\u0434,"}
{"value":" \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b \u044b "}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 "}
{"value":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"value":"9 175 181 187 193 199 205 211 217 223 229 235 241 247 253 259 265 271 277 283 289 295 301 307 313 319 325 331 337 343 349 355 361 367 373 379 385 391 397 403 409 415 421 427 433 439 445 451 457 463 469 475 481 487 493 499 505 511 517 523 529 535 541"}
{"value":"2-12T12:42:52+05:30\n\n[INST] Write a Javascript program to complete the following. Value of Pi ( \u00ce ) up to 50 decimal places | Function that prints the value of pi upto N decimal places ; Find value of pi upto using acos ( ) function ; Print value of pi upto N decimal places ; Driver Code ; Function that prints the value of pi [\/INST] \\n  Industries 2017-12-12T12:42:52+05:30"}
{"value":"7-10T12:30:00.000Z\n\n[SOL] Write a Javascript program to complete the following. Invert the Kth most significant bit of N | Function to convert decimal number n to its binary representation stored as an array arr [ ] ; Function to convert the number represented as a binary array arr [ ] into its decimal equivalent ; Function to return the updated integer after flipping the kth bit ; Number of bits in n ; Find the binary representation of n ; The number of bits in n are less than k ; Flip the kth bit ; Return the decimal equivalent of the number ; Driver code [\/SOL]\n\n[SOL] Write a Javascript program to complete the following. Invert the Kth most significant bit of N | Function to convert decimal number n to its binary representation stored as an array arr [ ] ; Function to convert the number represented as a binary array arr [ ] into its decimal equivalent ; Function to return the updated integer after flipping the kth bit ; Number of bits in n ; Find the binary representation of n ; The number of bits in n are less than k ; Flip the kth"}
{"value":"10:11:57"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"grees ; Driver code [\/INST] \\n 2. [INST] Write a Javascript program to complete the following. Angle between 3 given vertices in a n | Function that checks whether given angle can be created using any 3 sides ; Initialize x and y ; Calculate the number of vertices between i and j , j and k ; Calculate the angle subtended at the circumference ; Angle subtended at j can be found using the fact that the sum of angles of a triangle is equal to 180 degrees ; Driver code [\/INST] \\n 3. [INST] Write a Javascript program to complete the following. Angle between 3 given vertices in a n | Function that checks whether given angle can be created using any 3 sides ; Initialize x and y ; Calculate the number of vertices between i and j , j and k ; Calculate the angle subtended at the circumference ; Angle subtended at j can be found using the fact that the sum of angles of a triangle is equal to 180 degrees ; Driver code [\/INST] \\n 4. [INST] Write a Javascript program to complete the following"}
{"value":"te a Javascript program to complete the following. Loss when two items are sold at same price and same percentage profit \/ loss | Function that will find loss ; Driver Code ; Calling Function [\/INST] \\n 2. Write a Javascript program to complete the following. Loss when two items are sold at same price and same percentage profit \/ loss | Function that will find loss ; Driver Code ; Calling Function [\/INST] \\n 3. Write a Javascript program to complete the following. Loss when two items are sold at same price and same percentage profit \/ loss | Function that will find loss ; Driver Code ; Calling Function [\/INST] \\n 4. Write a Javascript program to complete the following. Loss when two items are sold at same price and same percentage profit \/ loss | Function that will find loss ; Driver Code ; Calling Function [\/INST] \\n 5. Write a Javascript program to complete the following. Loss when two items are sold at same price and same percentage profit \/ loss | Function that will find loss ; Driver Code ; Calling Function [\/INST] \\n 6. Write a Javascript program to complete the following. Loss when"}
{"value":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"value":"4-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+05:30 2022-04-23T10:33:17+0"}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":".2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 15:18:55 0 18.05.2021 1"}
{"value":"ers such that every pair among 4 numbers has a GCD K | Function to prvar N lines ; Iterate N times to prvar N lines ; Driver Code [\/INST] \\n indexOf(4) = 3; \/\/ 0 1 2 3 \/\/ 1 2 3 4 \/\/ 2 3 4 5 \/\/ 3 4 5 6 \/\/ 4 5 6 7 \/\/ 5 6 7 8 \/\/ 6 7 8 9 \/\/ 7 8 9 10 \/\/ 8 9 10 11 \/\/ 9 10 11 12 \/\/ 10 11 12 13 \/\/ 11 12 13 14 \/\/ 12 13 14 15 \/\/ 13 14 15 16 \/\/ 14 15 16 17 \/\/ 15 16 17 18 \/\/ 16 17 18 19 \/\/ 17 18 19 20 \/\/ 18 "}
{"value":"7-29T14:49:00.000Z \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\"}
{"value":" Write a Javascript program to complete the following. Count the number of Special Strings of a given length N | JavaScript Program to Count the number of Special Strings of a given length N ; Function to return count of special strings ; stores the answer for a particular value of n ; for n = 0 we have empty string ; for n = 1 we have 2 special strings ; calculate count of special string of length i ; fib [ n ] stores the count of special strings of length n ; initialise n [\/INST] \\n \u4e36 [INST] Write a Javascript program to complete the following. Count the number of Special Strings of a given length N | JavaScript Program to Count the number of Special Strings of a given length N ; Function to return count of special strings ; stores the answer for a particular value of n ; for n = 0 we have empty string ; for n = 1 we have 2 special strings ; calculate count of special string of length i ; fib [ n ] stores the count of special strings of length n ; initialise n [\/INST] \\n \u4e36 [INST] Write a Javascript program to complete the following. Count the number of Special Strings of"}
{"value":"te a Javascript program to find the number of ways to reach the end of the array. 2. Write a Javascript program to find the number of ways to reach the end of the array. 3. Write a Javascript program to find the number of ways to reach the end of the array. 4. Write a Javascript program to find the number of ways to reach the end of the array. 5. Write a Javascript program to find the number of ways to reach the end of the array. 6. Write a Javascript program to find the number of ways to reach the end of the array. 7. Write a Javascript program to find the number of ways to reach the end of the array. 8. Write a Javascript program to find the number of ways to reach the end of the array. 9. Write a Javascript program to find the number of ways to reach the end of the array. 10. Write a Javascript program to find the number of ways to reach the end of the array. 11. Write a Javascript program to find the number of ways to reach the end of the array. "}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"5-11T09:56:00.000Z. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1"}
{"value":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87"}
{"value":"3 2 4 2 5 2 6 2 7 2 8 2 9 2 10 2 11 2 12 2 13 2 14 2 15 2 16 2 17 2 18 2 19 2 20 2 21 2 22 2 23 2 24 2 25 2 26 2 27 2 28 2 29 2 30 2 31 2 32 2 33 2 34 2 35 2 36 2 37 2 38 2 39 2 40 2 41 2 42 2 43 2 44 2 45 2 46 2 47 2 48 2 49 2 50 2 51 2 52 2 53 2 5"}
{"value":"3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. "}
{"value":"1-19T13:28:39.000Z\n\nThis is a programming challenge.\n\n#include<bits\/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int m,n;\n    cin>>m>>n;\n    int arr[m][n];\n    for(int i=0;i<m;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            cin>>arr[i][j];\n        }\n    }\n    int dp[m][n];\n    for(int i=0;i<m;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            dp[i][j]=-1;\n        }\n    }\n    int ans=0;\n    for(int i=0;i<m;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(dp[i][j]==-1)\n            {"}
{"value":"\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0430\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0443\u0442\u0438 \u043e\u0442 \u0442\u043e\u0447\u043a\u0438 \u0434\u043e \u043d\u0430\u0447\u0430\u043b\u0430 \\n \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0438 \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0447\u0438\u0441\u043b\u0430 \u043f\u0443\u0442\u0435\u0439 ; \u0415\u0441\u043b\u0438 \u043c\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043d\u0438\u0436\u043d\u0435\u0433\u043e \u0438\u043b\u0438 \u043b\u0435\u0432\u043e\u0433\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0433\u043e \u0443\u0433\u043b\u0430, \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0441\u043f\u043e\u0441\u043e\u0431 \u0434\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0434\u043e ( 0 , 0 ) ; \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0443\u043c\u043c\u0443 \u043e\u0431\u043e\u0438\u0445 \u043f\u0443\u0442\u0435\u0439 ; \u0414\u0440\u0430\u0439\u0432\u0435\u0440\u043d\u044b\u0439 \u043a\u043e\u0434 [\/INST]\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n\nint countPaths(int x, int y, int n)\n{\n    if (x == 0 && y == 0)\n        return 1;\n    else if (x < 0 || y < 0)\n        return 0;\n    else\n        return countPaths(x - 1, y, n) + countPaths(x, y - 1, n);\n}\n\nint main()\n{\n    int n;\n    printf(\"Enter the value of n: \");\n    scanf(\"%d\", &n);\n    printf"}
{"value":" 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88"}
{"value":"11-14 08:00:00.000000000 +0530 1. 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 5"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 6"}
{"value":"7-08T11:36:41+05:30 2021-07-08T11:36:41+05:30 [INST] Write a Javascript program to complete the following. Count of distinct pair sum between two 1 to N value Arrays | Function to find the distinct sums ; Driver code [\/INST] \\n 2021-07-08T11:36:41+05:30 2021-07-08T11:36:41+05:30 [INST] Write a Javascript program to complete the following. Count of distinct pair sum between two 1 to N value Arrays | Function to find the distinct sums ; Driver code [\/INST] \\n 2021-07-08T11:36:41+05:30 2021-07-08T11:36:41+05:30 [INST] Write a Javascript program to"}
{"value":" Write a Javascript program to complete the following. Count of substrings from given Ternary strings containing characters at least once | Function to count the number of substrings consists of 0 , 1 , and 2 ; Initialize frequency array of size 3 ; Stores the resultant count ; Traversing string str ; Update frequency array ; If all the characters are present counting number of substrings possible ; Update number of substrings ; Return the number of substrings ; Driver Code [\/INST] \\n  \u043a\u043e\u0442\u043e\u0440\u044b [INST] Write a Javascript program to complete the following. Count of substrings from given Ternary strings containing characters at least once | Function to count the number of substrings consists of 0 , 1 , and 2 ; Initialize frequency array of size 3 ; Stores the resultant count ; Traversing string str ; Update frequency array ; If all the characters are present counting number of substrings possible ; Update number of substrings ; Return the number of substrings ; Driver Code [\/INST] \\n  \u043a\u0435 [INST] Write a Javascript program to complete the following. Count of substrings from given Ternary strings containing characters at least once | Function to count"}
{"value":"1 0 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0"}
{"value":"\u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d \u044b\u043d "}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":"7 07 18 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 00 19 0"}
{"value":"10-29 13:53:20"}
{"value":"2-15 13:47:15\n\n[SOL]\n\n```\nfunction isPalindrome(str) {\n  let stack = [];\n  for (let i = 0; i < str.length; i++) {\n    if (stack[stack.length - 1] === str[i]) {\n      stack.pop();\n    } else {\n      stack.push(str[i]);\n    }\n  }\n  return stack.length === 0;\n}\n\nconsole.log(isPalindrome('abcd'));\n```\n\n[\/SOL]"}
{"value":"4-21T00:31:29.000Z 1 1 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 2020 14 20"}
{"value":"\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d\u043d"}
{"value":"te a Javascript program to complete the following. Sentence Case of a given Camel cased string | Function to return the original string after converting it back from camelCase ; Print the first character as it is ; Traverse the rest of the characters one by one ; If current character is uppercase print space followed by the current character in lowercase ; Else print the current character ; Driver code \\n 2. Write a Javascript program to complete the following. Sentence Case of a given Camel cased string | Function to return the original string after converting it back from camelCase ; Print the first character as it is ; Traverse the rest of the characters one by one ; If current character is uppercase print space followed by the current character in lowercase ; Else print the current character ; Driver code \\n 3. Write a Javascript program to complete the following. Sentence Case of a given Camel cased string | Function to return the original string after converting it back from camelCase ; Print the first character as it is ; Traverse the rest of the characters one by one ; If current character is uppercase print space followed by the current character in"}
{"value":"8-12T06:08:30.393Z\n\n```\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\nint main() {\n\n    int n, k, i, j, count = 0;\n    char str[1000], ch;\n\n    printf(\"Enter the string: \");\n    scanf(\"%s\", str);\n\n    printf(\"Enter the character to count: \");\n    scanf(\" %c\", &ch);\n\n    printf(\"Enter the minimum number of repetitions: \");\n    scanf(\"%d\", &k);\n\n    n = strlen(str);\n\n    if (n % strlen(str) == 0) {\n        for (i = 0; i < n; i += strlen(str)) {\n            for (j = i; j < i + strlen(str); j++) {\n                if (str[j] == ch) {\n                    count++;\n                }\n            }\n        }\n    } else {\n        for"}
{"value":"ncy Measuring Techniques for Competitive Programming | Javascript program to count frequencies of array items having small values . ; Create an array to store counts . The size of array is limit + 1 and all values are initially 0 ; Traverse through array elements and count frequencies ( assuming that elements are limited by limit ) ; Driver code [\/INST] \\n sburgh.com\/2013\/09\/frequency-measuring-techniques-for-competitive-programming.html . 1. Frequency Measuring Techniques for Competitive Programming | Javascript program to count frequencies of array items having small values . ; Create an array to store counts . The size of array is limit + 1 and all values are initially 0 ; Traverse through array elements and count frequencies ( assuming that elements are limited by limit ) ; Driver code [\/INST] \\n sburgh.com\/2013\/09\/frequency-measuring-techniques-for-competitive-programming.html . 1. Frequency Measuring Techniques for Competitive Programming | Javascript program to count frequencies of array items having small values . ; Create an"}
{"value":" \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c "}
{"value":" Write a Javascript program to complete the following. Product of nodes at k | Function to find product of digits of elements at k - th level ; Initialize result ; increasing level number ; decreasing level number ; check if current level is the desired level or not ; required product ; Driver Code [\/INST] \\n parseInt(prompt(\"Enter the number of nodes: \")) ; \\n  var tree = new Array(n) ; \\n  for(var i = 0 ; i < n ; i++) { \\n  tree[i] = new Array(2) ; \\n  } \\n  for(var i = 0 ; i < n ; i++) { \\n  tree[i][0] = parseInt(prompt(\"Enter the left child of node \" + i)) ; \\n  tree[i][1] = parseInt(prompt(\"Enter the right child of node \" + i)) ; \\n  } \\n  var k = parseInt(prompt(\"Enter the level number: \")) ; \\n  var result = 1 ; \\n  var increasingLevel = 0 ; \\n  var decreasingLevel = n - 1"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"4-02 13:49:15. 1.\n\n### [INST] Write a Javascript program to complete the following. Program to check for ISBN | Javascript program to check if a given ISBN isvalid or not . ; length must be 10 ; Computing weighted sum of first 9 digits ; Checking last digit . ; If last digit is ' X ' , add 10 to sum , else add its value . ; Return true if weighted sum of digits is divisible by 11. ; Driver code [\/INST] \\n  \u043a\u043e\u0442\u043e\u0440\u044b 2020-04-02 13:49:15.\n\n[INST] Write a Javascript program to complete the following. Program to check for ISBN | Javascript program to check if a given ISBN isvalid or not . ; length must be 10 ; Computing weighted sum of first 9 digits ; Checking last digit . ; If last digit is ' X ' , add 10 to sum , else add its value . ; Return true if weighted sum of digits is divisible by "}
{"value":"8-10T08:04:42.000Z [\/INST] \\n 2020-08-10T08:04:42.000Z [INST] Write a Javascript program to complete the following. Reverse vowels in a given string | utility function to check for vowel ; Function to reverse order of vowels ; Storing the vowels separately ; Placing the vowels in the reverse order in the string ; Driver code [\/INST] \\n 2020-08-10T08:04:42.000Z [\/INST] \\n 2020-08-10T08:04:42.000Z [INST] Write a Javascript program to complete the following. Reverse vowels in a given string | utility function to check for vowel ; Function to reverse order of vowels ; Storing the vowels separately ; Placing the vowels in the reverse order in the string ; Driver code [\/INST] \\n"}
{"value":"\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d\u044d"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. "}
{"value":"te a Javascript program to complete the following. Area of a Square | Using Side , Diagonal and Perimeter | Function to find the area of a square ; Use above formula ; Given Side of square ; Function call [\/INST] \\n 2. Write a Javascript program to complete the following. Area of a Square | Using Side , Diagonal and Perimeter | Function to find the area of a square ; Use above formula ; Given Side of square ; Function call [\/INST] \\n 3. Write a Javascript program to complete the following. Area of a Square | Using Side , Diagonal and Perimeter | Function to find the area of a square ; Use above formula ; Given Side of square ; Function call [\/INST] \\n 4. Write a Javascript program to complete the following. Area of a Square | Using Side , Diagonal and Perimeter | Function to find the area of a square ; Use above formula ; Given Side of square ; Function call [\/INST] \\n 5. Write a Javascript program to complete the following. Area of a Square | Using Side , Diagonal and Perimeter | Function to find the area of a square ; Use above formula"}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":". 1 3. 3 4. 10 5. 21 6. 35 7. 55 8. 82 9. 113 10. 148 11. 187 12. 232 13. 283 14. 340 15. 403 16. 473 17. 550 18. 635 19. 728 20. 829 21. 940 22. 1060 23. 1189 24. 1328 25. 1477 26. 1636 27. 1805 28. 1985 29. 2176 30. 2378 31. 2592 32. 2818 33. 3057"}
{"value":"e centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect. The centroid is the point where the three medians intersect"}
{"value":"7-06T10:37:38.000Z\n\n[INST] Write a Javascript program to complete the following. Program to find the angles of a quadrilateral | Driver code ; according to formula derived above ; print all the angles [\/INST]\n\n\\n  \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 2022-07-06T10:37:38.000Z\n\n[INST] Write a Javascript program to complete the following. Program to find the angles of a quadrilateral | Driver code ; according to formula derived above ; print all the angles [\/INST]\n\n\\n  \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 2022-07-06T10:37:38.000Z\n\n[INST] Write a Javascript program to complete the following. Program to find the angles of a quadrilateral | Driver code ; according to formula derived above ; print all the angles [\/INST]\n\n\\n  \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 2022-07-06T10:37:38.0"}
{"value":" Write a Javascript program to complete the following. Distance between two parallel Planes in 3 | Function to find distance ; Driver Code [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries [\/INST] \\n  industries"}
{"value":"\u043f\u0438\u0441\u0430\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c \u043d\u0430 \u0408\u0430\u0432\u0430\u0441\u043a\u0440\u0438\u043f\u0442 \u0434\u0430 \u0437\u0430\u0432\u0440\u0448\u0438 \u0441\u043b\u0435\u0434\u0435\u045b\u0435. \u0411\u0440\u043e\u0458 \u043d\u0430\u0447\u0438\u043d\u0430 \u0434\u0430 \u0441\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u0438 \u0434\u0432\u0435 \u043b\u0430\u043d\u0446\u0435 \u043e\u0434 N \u0431\u0435\u0434\u043e\u0432\u0430 \u0441\u0430 N \/ 2 \u0431\u0435\u0434\u043e\u0432\u0430 \u0441\u0432\u0430\u043a\u0438 | \u0424\u0443\u043d\u043a\u0446\u0438\u0458\u0430 \u0434\u0430 \u0441\u0435\u0440\u0430\u0447\u0443\u0458\u0435 \u0431\u0440\u043e\u0458 \u043d\u0430\u0447\u0438\u043d\u0430 \u0434\u0430 \u0441\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u0438 2 \u043b\u0430\u043d\u0430\u0446 \u0441\u0430 \u0442\u0430\u0447\u043d\u043e N \/ 2 \u0431\u0435\u0434\u043e\u0432\u0430 \u0430\u043a\u043e \u0441\u0432\u0430\u043a\u0438 \u0431\u0435\u0434 \u0458\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u0442 | \u0411\u0440\u043e\u0458 \u043d\u0430\u0447\u0438\u043d\u0430 \u0434\u0430 \u0441\u0435 \u0438\u0437\u0430\u0431\u0435\u0440\u0435 N \/ 2 \u0431\u0435\u0434\u043e\u0432\u0430 \u043e\u0434 N \u0431\u0435\u0434\u043e\u0432\u0430 | \u0411\u0440\u043e\u0458 \u043d\u0430\u0447\u0438\u043d\u0430 \u0434\u0430 \u0441\u0435 \u043f\u0440\u0435\u0431\u0440\u043e\u0458\u0438 N \/ 2 \u0431\u0435\u0434\u043e\u0432\u0430 | \u0414\u0435\u043b\u0438\u043c\u043e \u0440\u0435\u0437\u0443\u043b\u0442\u0430\u0442 \u0441\u0430 2 \u0434\u0430 \u0441\u0435 \u0443\u043a\u043b\u043e\u043d\u0435 \u043f\u043e\u043d\u0430\u0432\u0459\u0430\u045a\u0430 | \u0412\u0440\u0430\u045b\u0430\u043c\u043e \u0440\u0435\u0437\u0443\u043b\u0442\u0430\u0442 ; \u0414\u0430\u0442\u0438 \u0423\u043b\u0430\u0437 ; \u0424\u0443\u043d\u043a\u0446\u0438\u0458\u0430 \u043f\u043e\u0437\u0438\u0432\u0430 ; [\/INST]"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 "}
{"value":"ST] Write a Javascript program to complete the following. Form minimum number from given sequence | Javascript program to print minimum number that can be formed from a given sequence of Is and Ds ; min_avail represents the minimum number which is still available for inserting in the output vector . pos_of_I keeps track of the most recent index where ' I ' was encountered w . r . t the output vector ; vector to store the output ; cover the base cases ; Traverse rest of the input ; print the number ; Driver code [\/INST] \\n  \u0432\u0440\u0435\u0442;\n\n[INST] Write a Javascript program to complete the following. Form minimum number from given sequence | Javascript program to print minimum number that can be formed from a given sequence of Is and Ds ; min_avail represents the minimum number which is still available for inserting in the output vector . pos_of_I keeps track of the most recent index where ' I ' was encountered w . r . t the output vector ; vector to store the output ; cover the base cases ; Traverse rest of the input ; print the number ; Driver code [\/INST] \\n  \u0432\u0440\u0435\u0442;\n\n"}
{"value":"T] \\n 1. Write a Javascript program to complete the following. \\n 2. Form minimum number from given sequence \\n 3. Function to decode the given sequence to construct minimum number without repeated digits \\n 4. result store output string \\n 5. create an empty stack of integers \\n 6. run n + 1 times where n is length of input sequence \\n 7. push number i + 1 into the stack \\n 8. if all characters of the input sequence are processed or current character is ' I ' ( increasing ) \\n 9. run till stack is empty \\n 10. remove top element from the stack and add it to solution \\n 11. main function \\n 12. \\n 13. \\n 14. \\n 15. \\n 16. \\n 17. \\n 18. \\n 19. \\n 20. \\n 21. \\n 22. \\n 23. \\n 24. \\n 25. \\n 26. \\n "}
{"value":"789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123"}
{"value":"4-01T10:12:10.010Z\n\n[INST] Write a Javascript program to complete the following. Check if the first and last digit of the smallest number forms a prime | function to check prime ; Function to generate smallest possible number with given digits ; Declare a hash array of size 10 and initialize all the elements to zero ; store the number of occurrences of the digits in the given array into the hash table ; Traverse the hash in ascending order to print the required number ; Print the number of times a digits occurs ; extracting the first digit ; extracting the last digit ; printing the prime combinations ; Driver code [\/INST]\n\n## Answer\n\n```\nfunction checkPrime(number) {\n  if (number === 1) return false;\n  for (let i = 2; i < number; i++) {\n    if (number % i === 0) return false;\n  }\n  return true;\n}\n\nfunction generateSmallestNumber(digits) {\n  let smallestNumber = 10 ** 9;\n  for ("}
{"value":"4-23T13:19:17.000Z\n\nWe have to check if a,b,c are coprime or not.\n\nFor example, if we take a = 12, b = 15, c = 16, then (a,b) and (b,c) are coprime but (a,c) is not.\n\nThe function to check if a and b are coprime is:\n\n```\nfunction isCoprime(a,b) {\n    if (a%b == 0 || b%a == 0)\n        return false;\n    else\n        return true;\n}\n```\n\nThe function to check if a,b,c are coprime is:\n\n```\nfunction isCoprime(a,b,c) {\n    if (isCoprime(a,b) && isCoprime(b,c) && !isCoprime(a,c))\n        return true;\n    else\n        return false;\n}\n```\n\nThe function to"}
{"value":"8-10T18:47:02.000Z\n\n[INST] Write a Javascript program to complete the following. Reach A and B by multiplying them with K and K ^ 2 at every step | function to check is it is possible to reach A and B starting from 1 and 1 ; find the cuberoot of the number ; divide the number by cuberoot ; if it is a perfect cuberoot and divides a and b ; Driver code [\/INST] \\n 2019-08-10T18:47:02.000Z\n\nI'm trying to write a function to check if it is possible to reach A and B starting from 1 and 1 by multiplying them with K and K ^ 2 at every step.\n\nThe function should return true if it is possible and false if not.\n\nI have tried to do this by finding the cuberoot of the number and then dividing the number by the cuberoot. If it is a perfect cuberoot and divides a and b, then it is possible to reach A"}
{"value":"23456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\n 123456789\\"}
{"value":"+ 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5 + ... + n * n \\n 1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5 + ... + n * n \\n 1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5 + ... + n * n \\n 1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5 + ... + n * n \\n 1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5 + ... + n * n \\n 1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5 + ... + n * n \\n 1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5 + ... + n *"}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":" 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88"}
{"value":"4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8"}
{"value":" Write a Javascript program to complete the following. Sgn value of a polynomial | Returns value of poly [ 0 ] x ( n - 1 ) + poly [ 1 ] x ( n - 2 ) + . . + poly [ n - 1 ] ; Initialize result ; Evaluate value of polynomial using Horner 's method ; Returns sign value of polynomial ; Let us evaluate value of 2 x3 - 6 x2 + 2 x - 1 for x = 3 [\/INST] \\n  industries"}
{"value":"ST] Write a Javascript program to complete the following. Insert minimum number in array so that sum of array becomes prime \\n [\/INST] \\n sburgh\\n [INST] Array to store primes ; function to calculate primes using sieve of eratosthenes ; Find prime number greater than a number ; To return prime number greater than n ; check if num is prime ; increment num ; To find number to be added so sum of array is prime ; call sieveOfEratostheneses to calculate primes ; To find sum of array elements ; To find prime number greater then sum ; Return difference of sum and num ; driver program [\/INST] \\n sburgh\\n"}
{"value":"te a Javascript program to complete the following. \\n 2. Sum of all Subarrays | Set 1 | Computes sum all sub - array ; Pick starting point ; Pick ending point ; sum subarray between current starting and ending points ; driver program to test above function [\/INST] \\n 3. Write a Javascript program to complete the following. \\n 4. Sum of all Subarrays | Set 1 | Computes sum all sub - array ; Pick starting point ; Pick ending point ; sum subarray between current starting and ending points ; driver program to test above function [\/INST] \\n 5. Write a Javascript program to complete the following. \\n 6. Sum of all Subarrays | Set 1 | Computes sum all sub - array ; Pick starting point ; Pick ending point ; sum subarray between current starting and ending points ; driver program to test above function [\/INST] \\n 7. Write a Javascript program to complete the following. \\n 8. Sum of all Subarrays | Set 1 | Computes sum all sub - array ; Pick starting point ; Pick ending point ; sum subarray between current starting"}
{"value":"9 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 2021 09 02 18:10:59 UTC 202"}
{"value":" Write a Javascript program to complete the following. Find ( a ^ b ) % m where ' a ' is very large | Utility function to calculate a % m ; ( s [ i ] - '0' ) gives the digit value and form the number ; Returns find ( a ^ b ) % m ; Find a % m ; Now multiply ans by b - 1 times and take mod with m ; Driver Code [\/INST] \\n  \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e"}
{"value":"5-17T17:24:05.000Z\n\n[INST] Write a Javascript program to complete the following. Lagrange 's Interpolation | To represent a data point corresponding to x and y = f ( x ) ; function to interpolate the given data points using Lagrange 's formula xi corresponds to the new data point whose value is to be obtained n represents the number of known data points ; let result = 0 ; Initialize result ; Compute individual terms of above formula ; Add current term to result ; creating an array of 4 known data points ; Using the interpolate function to obtain a data point corresponding to x = 3 [\/INST] \\n achuset\u0440\u044b 2019-05-17T17:24:05.000Z\n\n[INST] Write a Javascript program to complete the following. Lagrange 's Interpolation | To represent a data point corresponding to x and y = f ( x ) ; function to interpolate the given data points using Lagrange 's formula xi corresponds to the new data point whose value is to be obtained n represents"}
{"value":"\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435"}
{"value":"3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. "}
{"value":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"value":" Write a Javascript program to complete the following. Hamming distance between two Integers | Function to calculate hamming distance ; Driver code [\/INST] \\n  \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u044e\u0449\u0430\u044f\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0445 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0425\u0430\u043c\u043c\u0438\u043d\u0433\u0430. [INST] Write a Javascript program to complete the following. Hamming distance between two Integers | Function to calculate hamming distance ; Driver code [\/INST] \\n  \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u044e\u0449\u0430\u044f\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0445 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0425\u0430\u043c\u043c\u0438\u043d\u0433\u0430. [INST] Write a Javascript program to complete the following. Hamming distance between two Integers | Function to calculate hamming distance ; Driver code [\/INST] \\n  \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u044e\u0449\u0430\u044f\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0445 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0425\u0430\u043c\u043c\u0438\u043d\u0433\u0430. [INST] Write a Javascript program to complete the following. Hamming distance between two Integers | Function to calculate hamming distance ; Driver code [\/INST] \\n  \u0438\u0441\u043f\u043e"}
{"value":"\/INST] [INST] Write a Javascript program to complete the following. Print bitwise AND set of a number N | function to find bitwise subsets Efficient approach ; Driver code [\/INST] \\n  Industrially [\/INST] [INST] Write a Javascript program to complete the following. Print bitwise AND set of a number N | function to find bitwise subsets Efficient approach ; Driver code [\/INST] \\n  Industrially [\/INST] [INST] Write a Javascript program to complete the following. Print bitwise AND set of a number N | function to find bitwise subsets Efficient approach ; Driver code [\/INST] \\n  Industrially [\/INST] [INST] Write a Javascript program to complete the following. Print bitwise AND set of a number N | function to find bitwise subsets Efficient approach ; Driver code [\/INST] \\n  Industrially [\/INST] [INST] Write a Javascript program to complete the following. Print bitwise AND set of a number N | function to find bitwise subsets Efficient approach ; Driver code [\/INST] \\n  Indust"}
{"value":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"value":"pLayout.java\n\n```\nimport java.util.*;\n\nclass GroupLayout extends javax.swing.JFrame {\n\n    public GroupLayout() {\n        initComponents();\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    \/\/ <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">\n    private void initComponents() {\n\n        jLabel1 = new javax.swing.JLabel();\n        jLabel2 = new javax.swing.JLabel();\n        jLabel3 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jLabel5 = new javax.swing.JLabel();\n        jLabel6 = new javax.swing.JLabel();\n        jLabel7 = new javax.swing.JLabel();\n        jLabel8 = new javax.swing.JLabel();\n        jLabel9 = new javax.swing.JLabel();\n        jLabel10 = new javax.swing.JLabel();\n        jLabel11 = new javax.swing.JLabel();\n        jLabel12 = new javax.swing.JLabel();\n        j"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"0000 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 "}
{"value":"n 1. Write a Javascript program to complete the following. Rearrange array such that sum of same indexed elements is atmost K \\n 2. Function to rearrange array such that sum of similar indexed elements does not exceed K \\n 3. Sort the array B [ ] in descending order \\n 4. If condition fails \\n 5. Print the array \\n 6. Given arrays [1, 2, 3, 4, 5] and [1, 2, 3, 4, 5] \\n 7. Given arrays [1, 2, 3, 4, 5] and [1, 2, 3, 4, 5] \\n 8. Given arrays [1, 2, 3, 4, 5] and [1, 2, 3, 4, 5] \\n 9. Given arrays [1, 2, 3, 4, 5] and [1, 2, 3, 4, 5] \\n 10. Given arrays [1, 2"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"\u0443\u043a\u0446\u0438\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435.\n\n## \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \u0412\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432, \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b.\n\n\u0412\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.\n\n## \u0420\u0435\u0448\u0435\u043d\u0438\u0435\n\n```js\nfunction sort(arr) {\n    for (var i = 0; i < arr.length; i++) {\n        for (var j = 0; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                var tmp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = tmp;\n            }\n        }\n    }\n    return arr;\n}\n\nvar arr = [];\nvar n = +prompt(\"Enter array size: \");\n\nfor (var i = 0; i < n; i++) {\n    arr.push(+prompt"}
{"value":"\u043d\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0439. You can use the following code to check whether the array contains a set of contiguous integers or not. 3. The array contains 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,"}
{"value":"678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234"}
{"value":"\u0434 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438:\\n\\n\\nfunction longestSubarray(arr, n, k) {\\n\\tlet maxLen = 0;\\n\\tlet start = 0;\\n\\tlet end = 0;\\n\\tlet count = 0;\\n\\tlet visited = {};\\n\\n\\twhile (end < n) {\\n\\t\\twhile (count > k) {\\n\\t\\t\\tvisited[arr[start]] = 0;\\n\\t\\t\\tstart++;\\n\\t\\t\\tcount--;\\n\\t\\t}\\n\\t\\twhile (count < k) {\\n\\t\\t\\tvisited[arr[end]] = 1;\\n\\t\\t\\tend++;\\n\\t\\t\\tcount++;\\n\\t\\t}\\n\\t\\tif (end - start > maxLen) {\\n\\t\\t\\tmaxLen = end - start;\\n\\t\\t}\\n\\t}\\n\\treturn maxLen;\\n}\\n\\nlet arr = [1, "}
{"value":"te a Javascript program to complete the following. Check if any K ranges overlap at any point | Function that returns true if any k segments overlap at any point ; Vector to store the starting point and the ending point ; Starting points are marked by - 1 and ending points by + 1 ; Sort the vector by first element ; Stack to store the overlaps ; Get the current element ; If it is the starting point ; Push it in the stack ; It is the ending point ; Pop an element from stack ; If more than k ranges overlap ; Driver code [\/INST] \\n 2. Write a Javascript program to complete the following. Check if any K ranges overlap at any point | Function that returns true if any k segments overlap at any point ; Vector to store the starting point and the ending point ; Starting points are marked by - 1 and ending points by + 1 ; Sort the vector by first element ; Stack to store the overlaps ; Get the current element ; If it is the starting point ; Push it in the stack ; It is the ending point ; Pop an element from stack ; If more than k ranges overlap ; Driver code [\/INST] \\n 3. Write a Javascript"}
{"value":" 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. "}
{"value":"\u0443\u043a\u0446\u0438\u0438 [INST] Write a Javascript program to complete the following. Find largest d in array such that a + b + c = d | function to find largest d ; sort the array in ascending order ; iterating from backwards to find the required largest d ; since all four a , b , c , d should be distinct ; if the current combination of j , k , l in the set is equal to S [ i ] return this value as this would be the largest dsince we are iterating in descending order ; Driver Code [\/INST] \\n\n\n## How to find the largest number in a JavaScript array?\n\nHow to find the largest number in a JavaScript array? In JavaScript, there are multiple ways to find the largest number in an array. One way is to use the Math.max() method, which returns the largest value in an array. Another way is to use the Array.sort() method, which sorts the array in ascending order and returns the last element, which is the largest number in the array.\n\n## How do you find the largest number in a JavaScript array?\n\nHow do you find the largest number in a JavaScript array? To find the largest number in a"}
{"value":" 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "}
{"value":"07-06T15:17:54.000Z\n\n[INST] Write a Javascript program to complete the following. Maximize count of elements that can be selected having minimum difference between their sum and K | Function to count maximum number of elements that can be selected ; Sort the array ; Traverse the array ; Add current element to the sum ; IF sum exceeds k ; Increment count ; Return the count ;  ; Function call [\/INST] \\n  \u0432\u0440\u0435\u0442 2022-07-06T15:17:54.000Z\n\n[INST] Write a Javascript program to complete the following. Maximize count of elements that can be selected having minimum difference between their sum and K | Function to count maximum number of elements that can be selected ; Sort the array ; Traverse the array ; Add current element to the sum ; IF sum exceeds k ; Increment count ; Return the count ;  ; Function call [\/INST] \\n  \u0432\u0440\u0435\u0442 2022-07-06T15:17:54.000Z"}
{"value":"9-08 15:00:50 [INST] Write a Javascript program to complete the following. Program for array rotation | Function to left Rotate arr [ ] of size n by 1 ; Function to left rotate arr of size n by d ; utility function to print an array ; Driver program to test above functions [\/INST] \\n 2019-09-08 15:00:50 [INST] Write a Javascript program to complete the following. Program for array rotation | Function to left Rotate arr [ ] of size n by 1 ; Function to left rotate arr of size n by d ; utility function to print an array ; Driver program to test above functions [\/INST] \\n 2019-09-08 15:00:50 [INST] Write a Javascript program to complete the following. Program for array rotation | Function to left Rotate arr [ ] of size n by 1 ; Function to left rotate arr of size n by d ; utility function to print an array ; Driver program to test above functions [\/INST] \\n "}
{"value":"3-26T11:23:03.169Z\n\n#include <stdio.h>\n\nint main()\n{\n\n    int a[100],i,j,temp,n,start,end;\n    printf(\"Enter the number of elements:\");\n    scanf(\"%d\",&n);\n    printf(\"Enter the elements of the array:\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    printf(\"Enter the range:\");\n    scanf(\"%d %d\",&start,&end);\n    for(i=start;i<end;i++)\n    {\n        for(j=i+1;j<=end;j++)\n        {\n            if(a[i]>a[j])\n            {\n                temp=a[i];\n                a[i]=a[j];\n                a[j]=temp;\n            }\n        }\n    }\n    printf(\"Sorted array is:\");\n    for("}
{"value":"4-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+05:30 2016-04-14T03:52:39+0"}
{"value":" \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0432\u0441\u0435 \u043d\u0443\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u044b \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\nGroupLayout.java\n\npublic class GroupLayout extends Container implements Serializable {\n\n    public GroupLayout(Container parent, Object constraints) {\n        super(parent, constraints);\n    }\n\n    public GroupLayout(Container parent, Object constraints, LayoutManager2 lm) {\n        super(parent, constraints, lm);\n    }\n\n    public GroupLayout(Container parent, Object constraints, LayoutManager2 lm, int alignment) {\n        super(parent, constraints, lm, alignment);\n    }\n\n    public GroupLayout(Container parent, Object constraints, LayoutManager2 lm, int alignment, int hgap, int vgap) {\n        super(parent, constraints, lm, alignment, hgap, vgap);\n    }\n\n    public GroupLayout(Container parent, Object constraints, LayoutManager2 lm, int alignment, int hgap, int vgap, int gridwidth) {\n        super"}
{"value":"0 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100"}
{"value":" 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 "}
{"value":"2020 02:15 2 2 100 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "}
{"value":"\u0445\u044d\u043c\u0436\u044d\u044d\u0440\u044d\u044d\u0441 \u043e\u043b\u0433\u043e\u0445 \u04af\u0435\u0438\u0439\u043d \u043e\u0439\u043b\u0433\u043e\u043b\u0442\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"}
{"value":"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 "}
{"value":"0 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100"}
{"value":"] Write a Javascript program to complete the following. Find the player to be able to replace the last element that can be replaced by its divisors | Function to find the winner of the game played based on given conditions ; A wins if size of array is odd ; Otherwise , B wins ; Input array ; Size of the array [\/INST]\n\n## Javascript - Stack Overflow\n\nJavascript is a lightweight, interpreted programming language. It is a prototype-based, multi-paradigm scripting language that is dynamic, and loosely typed.\n\nIt is a language that is also characterized as dynamic, weakly typed, prototype-based with first-class functions. It is a multi-paradigm language, supporting object-oriented, imperative, and functional programming styles.\n\nIt is a prototype-based language, as well as multi-paradigm with imperative, and functional programming features. It is a multi-paradigm language, supporting object-oriented, imperative, and functional programming styles.\n\nIt is a prototype-based language, as well as multi-paradigm with imperative, and functional programming features. It is"}
{"value":". How to find all elements in array which have at least two greater elements itself\n\n```\nfunction findGreater(arr) {\n    for (var i = 0; i < arr.length; i++) {\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                count++;\n            }\n        }\n        if (count >= 2) {\n            console.log(arr[i]);\n        }\n    }\n}\n\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nfindGreater(arr);\n```\n\n## 2. Output\n\n```\n5\n6\n7\n8\n9\n10\n```"}
{"value":"ript program to find all elements in array which have atleast two greater elements itself . ; Driver code [\/INST] \\n  Industrially, the most common method of producing pigments is the grinding of natural minerals. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics industry. Pigments are also used in the cosmetics"}
{"value":" 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88"}
{"value":"] Write a Javascript program to complete the following. Minimize count of increments of each element of subarrays required to make Array non | Function to find the minimum number of operations required to make the array non - increasing ; Stores the count of required operations ; If arr [ i ] > arr [ i + 1 ] , no increments required . Otherwise , add their difference to the answer ; Return the result res ; Driver Code [\/INST] \\n industries.\n\n## C Program to find the minimum number of operations required to make the array non - increasing\n\n[INST] Write a Javascript program to complete the following. Minimize count of increments of each element of subarrays required to make Array non | Function to find the minimum number of operations required to make the array non - increasing ; Stores the count of required operations ; If arr [ i ] > arr [ i + 1 ] , no increments required . Otherwise , add their difference to the answer ; Return the result res ; Driver Code [\/INST] \\n industries.\n\n## C Program to find the minimum number of operations required to make the array non - increasing\n\n[INST]"}
{"value":"\u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c"}
{"value":" \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 \u0449 \u044b\u0438 "}
{"value":"18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 "}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. "}
{"value":"3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. "}
{"value":"2. \\n 3. \\n 4. \\n 5. \\n 6. \\n 7. \\n 8. \\n 9. \\n 10. \\n 11. \\n 12. \\n 13. \\n 14. \\n 15. \\n 16. \\n 17. \\n 18. \\n 19. \\n 20. \\n 21. \\n 22. \\n 23. \\n 24. \\n 25. \\n 26. \\n 27. \\n 28. \\n 29. \\n 30. \\n 31. \\n 32. \\n 33. \\n 34. \\n 35. \\n 36. \\n 37. \\n 38. \\n 39. \\n 40. \\n 41. \\n 42. \\n 43. \\n 44. \\n "}
{"value":"\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435\u0435"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"r [ 3 ] = 10 and update corresponding segment tree ; Print sum of values in array from index 1 to 3 ; This code is contributed by 29AjayKumar .\nGroupLayout.java. This class is used to create a layout for the window. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container. It is a subclass of Container."}
{"value":"5-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+00:00 2018-05-10T10:00:00+0"}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":"c Programming \\n 1. [INST] Write a Javascript program to complete the following. Double Knapsack | Dynamic Programming | Javascript implementation of the above approach ; 3D array to store states of DP ; w1_r represents remaining capacity of 1 st knapsack w2_r represents remaining capacity of 2 nd knapsack i represents index of the array arr we are working on ; Base case ; Variables to store the result of three parts of recurrence relation ; Store the state in the 3D array ; Input array ; Number of elements in the array ; Capacity of knapsacks ; Function to be called [\/INST] \\n 2. [INST] Write a Javascript program to complete the following. Double Knapsack | Dynamic Programming | Javascript implementation of the above approach ; 3D array to store states of DP ; w1_r represents remaining capacity of 1 st knapsack w2_r represents remaining capacity of 2 nd knapsack i represents index of the array arr we are working on ; Base case ; Variables to store the result of three parts of recurrence relation ; Store the state in the"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":" 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 "}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":" Write a Javascript program to complete the following. Maximum size subset with given sum | Returns size of maximum sized subset if there is a subset of set [ ] with sun equal to given sum . It returns - 1 if there is no subset with given sum . ; The value of subset [ i ] [ j ] will be true if there is a subset of set [ 0. . j - 1 ] with sum equal to i ; If sum is 0 , then answer is true ; If sum is not 0 and set is empty , then answer is false ; Fill the subset table in bottom up manner ; Driver Code [\/INST] \\n iembre [INST] Write a Javascript program to complete the following. Maximum size subset with given sum | Returns size of maximum sized subset if there is a subset of set [ ] with sun equal to given sum . It returns - 1 if there is no subset with given sum . ; The value of subset [ i ] [ j ] will be true if there is a subset of set [ 0. . j - 1 ] with sum equal to i ; If sum is 0 , then answer is true ; If sum is not 0 and"}
{"value":"016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 2016 "}
{"value":" 1. Write a Javascript program to complete the following.\n\n### Check for Majority Element in a sorted array\n\n```\nfunction majorityElement(arr) {\n    \/\/ Your code here\n    let count = 0;\n    let max = arr[0];\n    for(let i=0; i<arr.length; i++){\n        if(count === 0){\n            max = arr[i];\n            count = 1;\n        }\n        else if(arr[i] === max){\n            count++;\n        }\n        else{\n            count--;\n        }\n    }\n    return max;\n}\n```\n\n### Get last index according to n ( even or odd )\n\n```\nfunction getLastIndex(arr, n) {\n    \/\/ Your code here\n    let count = 0;\n    let lastIndex = 0;\n    for(let i=0; i<arr.length; i++){\n        if(arr[i] === n){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if("}
{"value":"\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0435\u0441\u043b\u0438 \u043c\u044b \u043d\u0430\u0439\u0434\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0432\u0435\u043d x, \u0442\u043e \u044d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043e\u043d \u0435\u0441\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e.\n\nIf x is present in arr [ low ... high ] then returns the index of first occurrence of x , otherwise returns - 1 ; Check if arr [ mid ] is the first occurrence of x . arr [ mid ] is first occurrence if x is one of the following is true : ( i ) mid == 0 and arr [ mid ] = = x ( ii ) arr [ mid - 1 ] < x and arr [ mid ] == x ; This function returns true if the x is present more than n \/ 2 times in arr [ ] of size n ; Find the index of first occurrence of x in arr [ ] ; If element is not present at all , return false ; check if the element is present more than n \/ 2 times ; Driver code [\/INST] \\n achuset, \u0447\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0435\u0441\u043b\u0438 \u043c\u044b \u043d\u0430\u0439\u0434\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0432\u0435\u043d x, \u0442\u043e \u044d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442,"}
{"value":"JavaScript \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0435\u0441\u0442\u044c \u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435. ; [\/INST] \\n\n\n```\nfunction majorityElement(array) {\n  \/\/ Write your code here\n}\n```\n\nWrite a Javascript program to complete the following. Check for Majority Element in a sorted array.\n\n```\nfunction majorityElement(array) {\n  \/\/ Write your code here\n}\n```\n\nWrite a Javascript program to complete the following. Check for Majority Element in a sorted array.\n\n```\nfunction majorityElement(array) {\n  \/\/ Write your code here\n}\n```\n\nWrite a Javascript program to complete the following. Check for Majority Element in a sorted array.\n\n```\nfunction majorityElement(array) {\n  \/\/ Write your code here\n}\n```\n\nWrite a Javascript program to complete the following. Check for Majority Element in a sorted array.\n\n```\nfunction majorityElement(array) {\n  \/\/ Write your code here\n}\n``"}
{"value":"3 5 8 9 10 12 15 18 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 105 110 115 120 125 130 135 140 145 150 155 160 165 170 175 180 185 190 195 200 205 210 215 220 225 230 235 240 245 250 255 260 265 270 275 280 285 290 295 300 305 310 315 320 3"}
{"value":"te a program to print the following pattern using loops. 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1 2 3 4 5 4 3 2 1"}
{"value":"5-14T06:07:50.000Z\n\n[INST] Write a Javascript program to complete the following. Modify array to another given array by replacing array elements with the sum of the array | Function to check if the arr can be converted to target by replacing any element in arr by the sum of arr ; Store the maximum element ; Store the index of the maximum element ; Traverse the array target ; If current element is greater than max ; If max element is 1 ; Traverse the array , target ; If current index is not equal to maximum element index ; Update max ; If max is less than or equal to 0 , ; Update the maximum element ; Recursively call the function ; Driver Code [\/INST] \\n  \u0432\u0440\u0435 2015-05-14T06:07:50.000Z\n\n[INST] Write a Javascript program to complete the following. Modify array to another given array by replacing array elements with the sum of the array | Function to check if the arr can be converted to target by replacing any element in arr by the sum of arr ; Store the maximum"}
{"value":"7-18T07:05:15.000Z\n\nThe first step is to convert the given expression to a sum of products. The binomial coefficient is the number of ways to choose r elements from a set of n elements. This is a very common question that is asked in various interviews. The number of ways to choose r elements from a set of n elements is given by the binomial coefficient, which is denoted by Cn,r.\n\nThe number of ways to choose r elements from a set of n elements is given by the binomial coefficient, which is denoted by Cn,r. The binomial coefficient is the number of ways to choose r elements from a set of n elements. This is a very common question that is asked in various interviews.\n\nThe number of ways to choose r elements from a set of n elements is given by the binomial coefficient, which is denoted by Cn,r. The binomial coefficient is the number of ways to choose r elements from a set of n elements.\n\nThis is a very common question that is asked in various interviews.\n\nThe number of ways to choose r elements"}
{"value":"789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345"}
{"value":"7-29T00:00:00.000Z\n\nPolygonal Numbers\n\n1. A polygonal number is a number that can be represented as a regular polygon with the number of dots equal to the number.\n2. The first few polygonal numbers are:\n\n1. A triangular number is a polygonal number with a triangle as the polygon.\n2. The first few triangular numbers are:\n3. A square number is a polygonal number with a square as the polygon.\n4. The first few square numbers are:\n5. A pentagonal number is a polygonal number with a pentagon as the polygon.\n6. The first few pentagonal numbers are:\n7. A hexagonal number is a polygonal number with a hexagon as the polygon.\n8. The first few hexagonal numbers are:\n9. A heptagonal number is a polygonal number with a heptagon as the polygon.\n10. The first few heptagonal numbers are:\n11. An octagonal number is a polygonal number"}
{"value":"\u044c \u043a\u043e\u0434 \u043d\u0430 Javascript\n\n```\nfunction antiPerfect(num) {\n  var rev = 0;\n  var sum = 0;\n  var div = 1;\n  for (var i = num; i > 0; i = Math.floor(i \/ 10)) {\n    rev = rev * 10 + i % 10;\n  }\n  for (var i = 1; i < rev; i++) {\n    if (rev % i === 0) {\n      sum += i;\n    }\n  }\n  if (sum === num) {\n    return \"Anti-perfect\";\n  } else {\n    return \"Not Anti-perfect\";\n  }\n}\n\nconsole.log(antiPerfect(28));\n```"}
{"value":", 4 , 8 , 15 , 27 , 50 \u00e2 \u20ac\u00a6 till N terms \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\"}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":"0.2017 15:13:39\n\n[INST] Write a Javascript program to complete the following. Find the larger exponential among two exponentials | Function to find whether a ^ b is greater or c ^ d ; Find b * log ( a ) ; Find d * log ( c ) ; Compare both values ; Driver code [\/INST] \\n 2017-10-17 15:13:39\n\n[INST] Write a Javascript program to complete the following. Find the larger exponential among two exponentials | Function to find whether a ^ b is greater or c ^ d ; Find b * log ( a ) ; Find d * log ( c ) ; Compare both values ; Driver code [\/INST] \\n 2017-10-17 15:13:39\n\n[INST] Write a Javascript program to complete the following. Find the larger exponential among two exponentials | Function to find whether a ^ b is greater or c ^ d ; Find b * log ( a ) ; Find d * log ("}
{"value":"\u0442\u043e \u0432 Javascript \u043d\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0443 \u0447\u0438\u0441\u043b\u0430.\n\n## [INST] Write a Javascript program to complete the following.\n\n[INST] Write a Javascript program to complete the following. Sum of prime numbers without odd prime digits | Javascript program for above approach ; Find all prime numbers ; Store all prime numbers ; Function to check if a digit is odd prime or not ; Function to find sum ; To store required answer ; Get all prime numbers ; Traverse through all the prime numbers ; Flag stores 1 if a number does not contain any odd primes ; Find all digits of a number ; If number does not contain any odd primes ; Return the required answer ; Driver code ; Function call [\/INST] \\n \u045d\u043d\u0446\u0442\u044e\u0435\u0442, \u0447\u0442\u043e \u0432 Javascript \u043d\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0443 \u0447\u0438\u0441\u043b\u0430.\n\n## [INST] Write a Javascript program to complete the following.\n\n[INST] Write a Javascript program to complete the following. Sum of prime numbers without odd prime digits | Javascript program for above approach ; Find all prime numbers ; Store all prime"}
{"value":"nt the number of primes in the prefix sum array of the given array | Function to return the count of primes in the given array ; Find maximum value in the array ; USE SIEVE TO FIND ALL PRIME NUMBERS LESS THAN OR EQUAL TO max_val Create a boolean array \" prime [ 0 . . n ] \" . A value in prime [ i ] will finally be false if i is Not a prime , else true . ; Remaining part of SIEVE ; If prime [ p ] is not changed , then it is a prime ; Update all multiples of p ; Find all primes in arr [ ] ; Function to generate the prefix array ; Fill the prefix array ; Driver code ; Prefix array of arr [ ] ; Count of primes in the prefix array [\/INST] \\n 2. Find maximum value in the array ; USE SIEVE TO FIND ALL PRIME NUMBERS LESS THAN OR EQUAL TO max_val Create a boolean array \" prime [ 0 . . n ] \" . A value in prime [ i ] will finally be false if i is Not a prime , else true . ; Remaining part"}
{"value":"5-17 16:08:52 [INST] Write a Javascript program to complete the following. Minimum value to be added to X such that it is at least Y percent of N | Function to return the required value that must be added to x so that it is at least y percent of n ; Required value ; If x is already >= y percent of n ; Driver code [\/INST] \\n 1. Write a Javascript program to complete the following. Minimum value to be added to X such that it is at least Y percent of N | Function to return the required value that must be added to x so that it is at least y percent of n ; Required value ; If x is already >= y percent of n ; Driver code [\/INST] \\n 2. Write a Javascript program to complete the following. Minimum value to be added to X such that it is at least Y percent of N | Function to return the required value that must be added to x so that it is at least y percent of n ; Required value ; If x is already >= y percent of n ; Driver code [\/INST] \\n 3. Write a"}
{"value":"05-02T05:14:37.800Z\n\nThis is because the number 1 is neither prime nor composite. 0 is neither prime nor composite. The smallest prime number is 2. 1 is neither prime nor composite. The smallest composite number is 3. 2 is neither prime nor composite. The smallest composite number is 3. 3 is neither prime nor composite. The smallest composite number is 4. 4 is neither prime nor composite. The smallest composite number is 5. 5 is neither prime nor composite. The smallest composite number is 6. 6 is neither prime nor composite. The smallest composite number is 7. 7 is neither prime nor composite. The smallest composite number is 8. 8 is neither prime nor composite. The smallest composite number is 9. 9 is neither prime nor composite. The smallest composite number is 10. 10 is neither prime nor composite. The smallest composite number is 11. 11 is neither prime nor composite. The smallest composite number is 12. 12 is neither prime nor composite. The smallest composite number is 13."}
{"value":" Write a Javascript program to complete the following. Seating arrangement of n boys and girls alternatively around a round table | Driver Code ; Get n ; find fac1 = ( n - 1 ) ! ; Find fac2 = n ! ; Find total number of ways ; Print the total number of ways [\/INST] \\n achuset 15, 2021, 08:02:13 PM"}
{"value":""}
{"value":"3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. "}
{"value":"\u0435\u043d\u043d\u043e \u0437\u0430\u0434\u0430\u0447\u0430. 1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"}
{"value":"ript Program position of n among the numbers made of 2 , 3 , 5 & 7 ; If number is 2 then it is on the position pos * 2 + 1 ; If number is 3 then it is on the position pos * 2 + 2 ; If number is 5 then it is on the position pos * 2 + 3 ; If number is 7 then it is on the position pos * 2 + 4 ; Driver code [\/INST] \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n"}
{"value":" Write a Javascript program to complete the following. Finding a Non Transitive Co | Checks if any possible triplet ( a , b , c ) satisfying the condition that ( a , b ) is coprime , ( b , c ) is coprime but ( a , c ) isnt ; Case 1 : Less than 3 numbers between L and R ; Case 2 : More than 3 numbers between L and R ; triplets should always be of form ( 2 k , 2 k + 1 , 2 k + 2 ) ; Case 3.1 : Exactly 3 numbers in range of form ( 2 k , 2 k + 1 , 2 k + 2 ) ; Case 3.2 : Exactly 3 numbers in range of form ( 2 k - 1 , 2 k , 2 k + 1 ) ; flag = True indicates that a pair exists between L and R ; Driver code ; finding possible Triplet between 2 and 10 ; finding possible Triplet between 23 and 46 [\/INST] \\n GroupLayout.java \\n GroupLayout.java \\n GroupLayout.java \\"}
{"value":"te a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write a Javascript program to complete the following. Count n digit numbers not having a particular digit. Write"}
{"value":"\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b\u0438 \u044b"}
{"value":"2. \\n 3. \\n 4. \\n 5. \\n 6. \\n 7. \\n 8. \\n 9. \\n 10. \\n 11. \\n 12. \\n 13. \\n 14. \\n 15. \\n 16. \\n 17. \\n 18. \\n 19. \\n 20. \\n 21. \\n 22. \\n 23. \\n 24. \\n 25. \\n 26. \\n 27. \\n 28. \\n 29. \\n 30. \\n 31. \\n 32. \\n 33. \\n 34. \\n 35. \\n 36. \\n 37. \\n 38. \\n 39. \\n 40. \\n 41. \\n 42. \\n 43. \\n 44. \\n "}
{"value":"te a Javascript program to complete the following. Find trace of matrix formed by adding Row | Return sum of first n integers of an AP ; Return the trace of sum of row - major matrix and column - major matrix ; Finding nth element in AP in case of Row major matrix . ; Finding sum of first n integers of AP in case of Row major matrix ; Finding nth element in AP in case of Row major matrix ; Finding sum of first n integers of AP in case of Column major matrix ; Driven Program [\/INST] \\n encias 1. Write a Javascript program to complete the following. Find trace of matrix formed by adding Row | Return sum of first n integers of an AP ; Return the trace of sum of row - major matrix and column - major matrix ; Finding nth element in AP in case of Row major matrix . ; Finding sum of first n integers of AP in case of Row major matrix ; Finding nth element in AP in case of Row major matrix ; Finding sum of first n integers of AP in case of Column major matrix ; Driven Program [\/INST] \\n encias 1. Write a Javascript"}
{"value":" 2 1 2 2 2 1 2 2 1 2 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 "}
{"value":"te a Javascript program to complete the following. Program to find the area of a Square | function to find the area ; Driver program [\/INST] \\n 2. Write a Javascript program to complete the following. Program to find the area of a Square | function to find the area ; Driver program [\/INST] \\n 3. Write a Javascript program to complete the following. Program to find the area of a Square | function to find the area ; Driver program [\/INST] \\n 4. Write a Javascript program to complete the following. Program to find the area of a Square | function to find the area ; Driver program [\/INST] \\n 5. Write a Javascript program to complete the following. Program to find the area of a Square | function to find the area ; Driver program [\/INST] \\n 6. Write a Javascript program to complete the following. Program to find the area of a Square | function to find the area ; Driver program [\/INST] \\n 7. Write a Javascript program to complete the following. Program to find the area of a Square | function to find the area ; Driver program [\/INST"}
{"value":"8-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17:50:28.0 2018-08-02 17"}
{"value":" \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c "}
{"value":"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
{"value":"Javascript program to find highest power of 2 smaller than or equal to n\n\nGiven a number N, the task is to find the highest power of 2 less than or equal to N.\n\nExamples:\n\n> Input: N = 13\n> Output: 8\n> Explanation:\n> The highest power of 2 less than or equal to 13 is 8.\n>\n> Input: N = 25\n> Output: 16\n\nApproach:\n\nThe idea is to iterate from 1 to N and find the highest power of 2 less than or equal to N.\n\nBelow is the implementation of the above approach:\n\n## Javascript program to find highest power of 2 smaller than or equal to n\n\n```\n\n\/\/ C++ program to find highest power of 2 smaller than or equal to n\n#include <bits\/stdc++.h>\nusing namespace std;\n\n\/\/ Function to find highest power of 2 smaller than or equal to n\nint highestPowerOf2(int n)\n{\n    \/\/ Iterate from 1 to"}
{"value":"3-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:17:43 2020-03-06 18:1"}
{"value":""}
{"value":" 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16"}
{"value":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"}
{"value":"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"}
{"value":"2019 17:22. A program to subtract two numbers without using subtraction operator. In this tutorial, we will learn how to subtract two numbers without using subtraction operator in JavaScript. How to subtract two numbers without using subtraction operator in JavaScript. How to subtract two numbers without using subtraction operator in JavaScript. We can use the following code to subtract two numbers without using subtraction operator in JavaScript. Subtract two numbers without using subtraction operator in JavaScript. Subtract two numbers without using subtraction operator in JavaScript. We can use the following code to subtract two numbers without using subtraction operator in JavaScript. Subtract two numbers without using subtraction operator in JavaScript. Subtract two numbers without using subtraction operator in JavaScript. We can use the following code to subtract two numbers without using subtraction operator in JavaScript. Subtract two numbers without using subtraction operator in JavaScript. Subtract two numbers without using subtraction operator in JavaScript. We can use the following code to subtract two numbers without using subtraction operator in JavaScript. Subtract two numbers without using subtraction operator in JavaScript. Sub"}
{"value":" 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95"}
{"value":"\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438\u0435 \u044b\u0438"}
{"value":"\n#include<iostream>\n#include<bits\/stdc++.h>\nusing namespace std;\n\nint gcd(int a, int b)\n{\n    if (b == 0)\n        return a;\n    return gcd(b, a % b);\n}\n\nint main()\n{\n    int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\n    int n = sizeof(arr) \/ sizeof(arr[0]);\n    int i, j;\n    for (i = 0; i < n - 1; i++)\n    {\n        for (j = i + 1; j < n; j++)\n        {\n            if (gcd(arr[i], arr[j]) != 1)\n                break;\n        }\n        if (j == n)\n        {\n            cout << \"No coprime pair exists\" << endl;\n            return 0;\n        }\n    }\n    cout << \"Coprime pair exists"}
{"value":" Write a Javascript program to complete the following. Count of ways to split N into Triplets forming a Triangle | Function to return the required number of ways ; Check if a , b and c can form a triangle ; Return number of ways ; Driver Code [\/INST] \\n  \u043a\u043e\u0442\u043e\u0440\u044b [INST] Write a Javascript program to complete the following. Count of ways to split N into Triplets forming a Triangle | Function to return the required number of ways ; Check if a , b and c can form a triangle ; Return number of ways ; Driver Code [\/INST] \\n  \u043a\u043e\u0442\u043e\u0440\u044b [INST] Write a Javascript program to complete the following. Count of ways to split N into Triplets forming a Triangle | Function to return the required number of ways ; Check if a , b and c can form a triangle ; Return number of ways ; Driver Code [\/INST] \\n  \u043a\u043e\u0442\u043e\u0440\u044b [INST] Write a Javascript program to complete the following. Count of ways to split N into Triplets forming a Triangle | Function to return the required number of ways ; Check if a , b and c can form a triangle ; Return number of ways ; Driver Code [\/INST]"}
{"value":" function countPairs(arr, n) { let count = 0; for (let i = 0; i < n; i++) { for (let j = 0; j < n; j++) { if (arr[i] === arr[j] && i !== j) { count++; } } } return count; } \\n  Indust [\/CODE] \\n  Indust [SAMPLE] Input: arr = [1, 2, 3, 4, 5, 6, 7] Output: 3 \\n  Indust [\/SAMPLE] \\n  Indust [SAMPLE] Input: arr = [1, 1, 1, 2, 2, 3, 4, 4, 5, 6, 7] Output: 6 \\n  Indust [\/SAMPLE] \\n  Indust [SAMPLE] Input: arr = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] Output: 10 \\n  Indust [\/SAMPLE] \\n  Indust [SAMPLE] Input:"}
{"value":"3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 51. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. "}
{"value":"9-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+05:30 2020-09-07T06:35:57+0"}
{"value":"2 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46"}
{"value":"\u0440\u0430\u043d\u0435 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430 \u0438\u0437\u0447\u0438\u0441\u043b\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0434\u044a\u043b\u0436\u0438\u043d\u0438\u0442\u0435 \u043d\u0430 \u0434\u0438\u0430\u0433\u043e\u043d\u0430\u043b\u0438\u0442\u0435 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442, \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u043a\u0438 \u0434\u044a\u043b\u0436\u0438\u043d\u0430\u0442\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0442\u0435 \u0438 \u044a\u0433\u044a\u043b\u0430 \u043d\u0430 \u0432\u044a\u0440\u0445\u0430.\n\n## 3. Rhombus\n\nThe Rhombus is a quadrilateral with all sides equal and opposite angles equal. The diagonals of a rhombus are perpendicular bisectors of each other.\n\nThe diagonals of a rhombus are perpendicular bisectors of each other.\n\n## 4. Square\n\nA square is a quadrilateral with all sides equal and all angles equal. The diagonals of a square are perpendicular bisectors of each other.\n\nThe diagonals of a square are perpendicular bisectors of each other.\n\n## 5. Rectangle\n\nA rectangle is a quadrilateral with opposite sides equal and all angles equal. The diagonals of a rectangle are perpendicular bisectors of each other.\n\nThe diagonals of a rectangle are perpendicular bisectors of each other.\n\n##"}
{"value":"12740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 18580012740 185"}
{"value":" Write a Javascript program to complete the following. Number of ways to choose a pair containing an even and an odd number from 1 to N | Driver code [\/INST] \\n  \u043a\u043e\u0442\u043e\u0440\u044b [INST] Write a Javascript program to complete the following. Number of ways to choose a pair containing an even and an odd number from 1 to N | Driver code [\/INST] \\n  [INST] Write a Javascript program to complete the following. Number of ways to choose a pair containing an even and an odd number from 1 to N | Driver code [\/INST] \\n  [INST] Write a Javascript program to complete the following. Number of ways to choose a pair containing an even and an odd number from 1 to N | Driver code [\/INST] \\n  [INST] Write a Javascript program to complete the following. Number of ways to choose a pair containing an even and an odd number from 1 to N | Driver code [\/INST] \\n  [INST] Write a Javascript program to complete the following. Number of ways to choose a pair containing an even and an odd number from 1 to N | Driver code [\/INST]"}
{"value":""}
{"value":"2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 "}
{"value":"18-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 17:09:36 2018-01-23 "}
{"value":"\u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c \u044c"}
{"value":" Write a program to print the following pattern. 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"}
